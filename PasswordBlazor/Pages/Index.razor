@using Newtonsoft.Json;
@using Data;

@page "/"

<PageTitle>eTop Password Tool</PageTitle>

<center>
<h1>eTop Technology Password Tool</h1>

Welcome! To generate a new password and sharing link, click the button &#x1F604;
<br />
<br />
<br />
<button type="button" @onclick="FullGen" class="btn btn-primary">Generate Password and PwPush Link</button>
<br />
<br />
<p>Password: <strong>@newPassword</strong></p>
<CopyToClipboardButton Text="@newPassword" />
<p>PwPush Link: <strong>@pwPushURL</strong></p>
<CopyToClipboardButton Text="@pwPushURL" />
</center>

@code
{
    //Don't touch below
    public string? newPassword = String.Empty;
    public string? pwPushURL = String.Empty;

    private async Task FullGen()
    {
        // Import Adjectives
        string[] adjectives = File.ReadAllLines(@"Adjectives.txt");

        // Import Nouns
        string[] nouns = File.ReadAllLines(@"Nouns.txt");

        // Import Symbols
        string[] Symbols = File.ReadAllLines(@"Symbols.txt");

        // Import random number generator
        Random random = new Random();

        int adjectiveNumber = random.Next(0, 39);
        int nounsNumber = random.Next(0, 39);
        int trailingNumber = random.Next(10, 99);
        int symbolNumber = random.Next(0, 9);

        string selectedAdjective = adjectives[adjectiveNumber];
        string selectedNouns = nouns[nounsNumber];
        string selectedSymbol = Symbols[symbolNumber];

        newPassword = selectedAdjective + selectedNouns + trailingNumber + selectedSymbol;

        var values = new Dictionary<string, string>
            {
               { "password[payload]", $"{newPassword}" }
            };

        var content = new FormUrlEncodedContent(values);
        var response = await PasswordBlazor.Data.ApiIntegration.client.PostAsync(Data.ApiIntegration.PwPushAPI, content);
        var responseString = await response.Content.ReadAsStringAsync();
#pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
        PasswordBlazor.Data.Root responseObj = JsonConvert.DeserializeObject<PasswordBlazor.Data.Root>(responseString);
#pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
        pwPushURL = $"{Data.ApiIntegration.PwPushPass}{responseObj?.url_token}";
    }
}